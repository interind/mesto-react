{"version":3,"sources":["utils/api.js","context/CurrentUserContext.js","components/Card.js","components/Popup.js","components/ImagePopup.js","components/Main.js","images/header/logoFon.svg","components/Header.js","components/Footer.js","components/Loader/Loader.js","components/Form.js","components/PopupWithForm.js","components/MarkupForPopups.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/Error/ErrorBoundary.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/Error/ErrorPage.js","components/App.js","index.js"],"names":["api","url","token","user","cards","this","_url","_token","_user","_cards","res","ok","json","Promise","reject","Error","status","fetch","headers","authorization","then","_getResponse","name","about","method","body","JSON","stringify","avatar","link","infoId","isLike","toggleMethod","id","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","_id","useContext","useState","visible","setVisible","Fragment","className","src","alt","onError","onClick","owner","type","title","likes","find","map","like","index","length","Popup","isOpen","onClose","children","popup","classes","popup_opened","onMouseDown","evt","currentTarget","target","ImagePopup","selectedCard","Main","a","num","onEditAvatar","onEditProfile","onAddPlace","handleCardDelete","closeAllPopups","handleCardClick","handleCardLike","count","setCount","slice","createdAt","bind","Header","headerLogo","Footer","Date","getFullYear","Loader","Form","active","buttonTitle","onSubmit","disabledButton","classDisActive","disabled","PopupWithForm","MarkupForPopups","props","placeholder","value","avatarUser","ref","inputRef","onChange","editAvatar","onInput","validationAvatar","required","avatarMessage","minLength","maxLength","nameProfile","editName","validationProfile","profileMessage","editAbout","place","editPlace","validationPlace","placeMessage","editLink","AddPlacePopup","isLoadingButton","placePopup","namePlace","setPlace","setLink","activeButton","setActiveButton","validPlace","setValidPlace","preventDefault","validity","valid","validationMessage","DeleteCardPopup","onDeleteCard","isCard","deletePopup","ErrorBoundary","state","error","errorInfo","setState","style","whiteSpace","toString","componentStack","Component","EditAvatarPopup","onUpdateAvatar","avatarPopup","useRef","setAvatar","validAvatar","setValidAvatar","current","EditProfilePopup","onUpdateUser","profile","currentUser","setName","description","setDescription","validProfile","setValidProfile","useEffect","ErrorPage","message","color","App","setIsCard","isAddPlacePopupOpen","setAddPlacePopup","isEditAvatarPopupOpen","setEditAvatarPopup","isEditProfilePopupOpen","setEditProfilePopup","isConfirmTrashPopupOpen","setConfirmTrashPopup","setCurrentUser","setCards","loading","setLoading","statusOk","setIsOk","statusError","setError","setSelectedCard","buttonLoading","setButtonLoading","undefined","closeAllPopupsEsc","key","window","addEventListener","removeEventListener","all","getInfoForUser","getInfoForCards","dataUser","dataCards","catch","err","console","finally","Provider","isLiked","some","i","changeLikeCardStatus","newCard","newCards","c","addCard","updateUserAvatar","infoAvatar","updateUserInfo","infoUser","idCard","deleteCard","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a557fde4.chunk.js","sourcesContent":["class Api {\n  constructor({\n    url,\n    token,\n    user,\n    cards,\n  }) {\n    this._url = url;\n    this._token = token;\n    this._user = user;\n    this._cards = cards;\n  }\n\n  _getResponse(res) {\n    return res.ok\n      ? res.json()\n      : Promise.reject(new Error(`Ошибка api: ${res.status}`));\n  }\n\n  getInfoForUser() {\n    return fetch(`${this._url}${this._user}`, {\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n\n  getInfoForCards() {\n    return fetch(`${this._url}${this._cards}`, {\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n\n  updateUserInfo({ name, about }) {\n    return fetch(`${this._url}${this._user}`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._getResponse);\n  }\n\n  updateUserAvatar({ avatar }) {\n    return fetch(`${this._url}${this._user}/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._getResponse);\n  }\n\n  addCard({ name, link }) {\n    return fetch(`${this._url}${this._cards}`, {\n      method: 'POST',\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._getResponse);\n  }\n\n  changeLikeCardStatus(infoId, isLike) {\n    const toggleMethod = isLike ? 'PUT' : 'DELETE';\n    return fetch(`${this._url}${this._cards}/likes/${infoId}`, {\n      method: toggleMethod,\n\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}${this._cards}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `${this._token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-16/',\n  token: 'bba27b67-a97d-4fd9-b42d-01c5b1258337',\n  user: 'users/me',\n  cards: 'cards',\n});\n\nexport default api;\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Card({ card, onCardClick, onCardDelete, onCardLike }) {\r\n  const { _id } = React.useContext(CurrentUserContext);\r\n  const [visible, setVisible] = React.useState(true);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {visible && (\r\n        <div className='element'>\r\n          <img\r\n            className='element__pic'\r\n            src={card.link}\r\n            alt={card.name}\r\n            onError={() => {\r\n              setVisible(false);\r\n            }}\r\n            onClick={() => onCardClick(card)}\r\n          />\r\n          <button\r\n            className={`element__button-trash ${\r\n              card.owner &&\r\n              (card.owner._id === _id ? 'element__button-trash_visible' : '')\r\n            }`}\r\n            type='button'\r\n            title='кнопка удаления карточки'\r\n            onClick={() => onCardDelete(card)}></button>\r\n          <div className='element__info'>\r\n            <h2 className='element__title' title={card.name}>\r\n              {card.name}\r\n            </h2>\r\n            {card.likes && (\r\n              <div className='element__like'>\r\n                <button\r\n                  className={`element__button-like element__button-like_color_white ${\r\n                    card.likes.find((id) => id._id === _id)\r\n                      ? 'element__button-like_color_black'\r\n                      : ''\r\n                  }`}\r\n                  type='button'\r\n                  title='кнопка для лайков'\r\n                  onClick={() => onCardLike(card)}></button>\r\n                <span\r\n                  className='element__counter-like'\r\n                  title={card.likes.map(\r\n                    (like, index) => index + 1 + '🖤' + like.name\r\n                  )}>\r\n                  {card.likes.length}\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  card: PropTypes.object,\r\n  onCardClick: PropTypes.func.isRequired,\r\n  onCardDelete: PropTypes.func.isRequired,\r\n  onCardLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from 'classnames';\r\n\r\nfunction Popup({ name, isOpen, onClose, children }) {\r\n  const popup = classes(`popup popup_type_${name}`, { popup_opened: isOpen });\r\n\r\n  function clickClosePopup(evt) {\r\n    evt.currentTarget === evt.target && onClose();\r\n  }\r\n\r\n  return (\r\n     <div\r\n        className={popup}\r\n        onMouseDown={clickClosePopup}>\r\n       {children}\r\n     </div>\r\n  );\r\n}\r\n\r\nPopup.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Popup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Popup from './Popup';\r\n\r\nfunction ImagePopup({ selectedCard, onClose }) {\r\n  return (\r\n    <Popup name={'zoom'} isOpen={selectedCard} onClose={onClose}>\r\n      {selectedCard && (<div className='popup__zoom'>\r\n        <img\r\n          className='popup__pic'\r\n          src={selectedCard.link}\r\n          alt={selectedCard.name}\r\n        />\r\n        <span className='popup__place-pic'>{selectedCard.name}</span>\r\n        <button\r\n            className='popup__button-close'\r\n            type='button'\r\n            title='закрыть'\r\n            onClick={onClose}\r\n          />\r\n      </div>)}\r\n    </Popup>\r\n  );\r\n}\r\n\r\nImagePopup.propTypes = {\r\n  selectedCard: PropTypes.object || undefined,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from './Card.js';\r\nimport ImagePopup from './ImagePopup.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\n\r\nfunction Main({\r\n  onEditAvatar,\r\n  onEditProfile,\r\n  onAddPlace,\r\n  handleCardDelete,\r\n  closeAllPopups,\r\n  handleCardClick,\r\n  selectedCard,\r\n  cards,\r\n  handleCardLike,\r\n}) {\r\n  const { name, about, avatar, _id } = React.useContext(CurrentUserContext);\r\n  const [count, setCount] = React.useState(6);\r\n  const arr = (a, num) => [...a].slice(0, num);\r\n  const addCount = (num) => setCount(count + num);\r\n  return (\r\n    <React.Fragment>\r\n        <section className='profile page__profile'>\r\n          <img\r\n            className='profile__avatar'\r\n            src={avatar}\r\n            alt='Аватарка'\r\n            id={_id}\r\n            onClick={onEditAvatar}\r\n          />\r\n          <div className='profile__info'>\r\n            <h1 className='profile__title' title={name}>\r\n              {name}\r\n            </h1>\r\n            <button\r\n              className='profile__edit-button'\r\n              type='button'\r\n              title='изменить данные профиля'\r\n              onClick={onEditProfile}></button>\r\n            <p className='profile__subtitle' title={about}>\r\n              {about}\r\n            </p>\r\n          </div>\r\n          <button\r\n            className='profile__add-button'\r\n            type='button'\r\n            title='добавить картинки'\r\n            onClick={onAddPlace}></button>\r\n        </section>\r\n      <div className='elements page__elements'>\r\n        {arr(cards, count).map((card) => {\r\n              return (\r\n                <Card\r\n                  onCardDelete={handleCardDelete}\r\n                  card={card}\r\n                  key={card.createdAt + card._id}\r\n                  onCardClick={handleCardClick}\r\n                  onCardLike={handleCardLike}\r\n                />\r\n              );\r\n          })\r\n        }\r\n        {count < cards.length && <button\r\n                                   className=\"element__button-add\"\r\n                                  type=\"button\"\r\n                                  onMouseDown={addCount.bind(this, 3)}>\r\n                                    Add Card\r\n                                 </button>\r\n        }\r\n      </div>\r\n      <ImagePopup\r\n        selectedCard={selectedCard}\r\n        onClose={closeAllPopups}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nMain.propTypes = {\r\n  onEditAvatar: PropTypes.func.isRequired,\r\n  onEditProfile: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n  handleCardDelete: PropTypes.func.isRequired,\r\n  closeAllPopups: PropTypes.func.isRequired,\r\n  handleCardClick: PropTypes.func.isRequired,\r\n  selectedCard: PropTypes.object,\r\n  cards: PropTypes.array,\r\n  handleCardLike: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/logoFon.8724261e.svg\";","import React from 'react';\r\nimport headerLogo from '../images/header/logoFon.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className='header page__header'>\r\n      <img className='logo header__logo' src={headerLogo} alt='Логотип' />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer page__footer'>\r\n      <p className='footer__copyright'>\r\n        &copy;{new Date().getFullYear()} Mesto Russia\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n  return <div className='lds-dual-ring'></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Form ({active, name, title, buttonTitle, onSubmit, onClose, children}) {\r\n  const disabledButton = active ? 'disabled' : '';\r\n  const classDisActive = active ? 'popup__button-submit_disabled' : '';\r\n  return (\r\n    <form\r\n      className={`popup__container popup__container_type_${name}`}\r\n      name={name}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <h2 className='popup__title'>\r\n        {title}\r\n      </h2>\r\n        {children}\r\n      <button\r\n        className={`popup__button-submit ${classDisActive}`}\r\n        type='submit'\r\n        title={buttonTitle}\r\n        disabled={disabledButton}>\r\n        {buttonTitle}\r\n      </button>\r\n      <button\r\n        className='popup__button-close'\r\n        type='button'\r\n        title='закрыть'\r\n        onClick={onClose}>\r\n      </button>\r\n     </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  active: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  title: PropTypes.string,\r\n  buttonTitle: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Popup from './Popup';\r\nimport Form from './Form';\r\n\r\nfunction PopupWithForm({\r\n  active,\r\n  name,\r\n  title,\r\n  onSubmit,\r\n  buttonTitle,\r\n  onClose,\r\n  isOpen,\r\n  children,\r\n}) {\r\n  return (\r\n    <React.Fragment>\r\n      <Popup name={name} isOpen={isOpen} onClose={onClose}>\r\n        <Form\r\n          name={name}\r\n          active={active}\r\n          title={title}\r\n          buttonTitle={buttonTitle}\r\n          onClose={onClose}\r\n          onSubmit={onSubmit}\r\n        >\r\n          {children}\r\n        </Form>\r\n      </Popup>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nPopupWithForm.propTypes = {\r\n  active: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  title: PropTypes.string,\r\n  buttonTitle: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default PopupWithForm;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nexport const MarkupForPopups = {\r\n  Avatar: function Avatar(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          id='input-avatar'\r\n          name='avatar'\r\n          value={props.avatarUser}\r\n          ref={props.inputRef}\r\n          onChange={props.editAvatar}\r\n          onInput={props.validationAvatar}\r\n          required\r\n        />\r\n        {props.avatar !== '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-avatar-error '>\r\n              {props.avatarMessage}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n\r\n  Profile: function Profile(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          id='input-name'\r\n          type='text'\r\n          name='name'\r\n          minLength='2'\r\n          maxLength='40'\r\n          placeholder='Имя'\r\n          value={props.nameProfile}\r\n          onChange={props.editName}\r\n          onInput={props.validationProfile}\r\n          required\r\n        />\r\n        {props.nameProfile === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-name-error'>\r\n              {props.profileMessage.name}\r\n            </span>\r\n          </div>\r\n        )}\r\n        <input\r\n          className='popup__input'\r\n          id='input-about'\r\n          type='text'\r\n          name='about'\r\n          minLength='2'\r\n          maxLength='200'\r\n          placeholder='Профессия'\r\n          value={props.about}\r\n          onChange={props.editAbout}\r\n          onInput={props.validationProfile}\r\n          required\r\n        />\r\n        {props.about === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-about-error'>\r\n              {props.profileMessage.about}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n  Place: function Place(props) {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          className='popup__input'\r\n          type='text'\r\n          placeholder='Название'\r\n          id='input-place'\r\n          name='place'\r\n          minLength='1'\r\n          value={props.place}\r\n          maxLength='30'\r\n          onChange={props.editPlace}\r\n          onInput={props.validationPlace}\r\n          required\r\n        />\r\n        {props.place === '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-place-error'>\r\n              {props.placeMessage.place}\r\n            </span>\r\n          </div>\r\n        )}\r\n        <input\r\n          className='popup__input'\r\n          type='url'\r\n          placeholder='Ссылка на картинку'\r\n          id='input-link'\r\n          value={props.link}\r\n          name='link'\r\n          onChange={props.editLink}\r\n          onInput={props.validationPlace}\r\n          required\r\n        />\r\n        {props.link !== '' && (\r\n          <div className='popup__error'>\r\n            <span\r\n              className='popup__input-error popup__input-error_active'\r\n              id='input-link-error'>\r\n              {props.placeMessage.link}\r\n            </span>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  },\r\n};\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddPlacePopup({ isLoadingButton, isOpen, onClose, onAddPlace }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const placePopup = {\r\n    id: 3,\r\n    name: 'place',\r\n    title: 'Новое место',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  const [namePlace, setPlace] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n\r\n  const [validPlace, setValidPlace] = React.useState({\r\n    place: '',\r\n    link: '',\r\n  });\r\n\r\n  function validationPlace(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidPlace({\r\n          [evt.target.name]: evt.target.validationMessage,\r\n        })\r\n      : setValidPlace({\r\n          [evt.target.name]: '',\r\n        });\r\n  }\r\n\r\n  function setPlaceName(evt) {\r\n    setPlace(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function setLinkPlace(evt) {\r\n    setLink(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    setPlace('');\r\n    setLink('');\r\n    onAddPlace({\r\n      name: namePlace,\r\n      link: link,\r\n    });\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      key={placePopup.id}\r\n      name={placePopup.name}\r\n      title={placePopup.title}\r\n      buttonTitle={placePopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      active={activeButton}\r\n      onSubmit={handleSubmit}>\r\n      <MarkupForPopups.Place\r\n        place={namePlace}\r\n        link={link}\r\n        editPlace={setPlaceName}\r\n        editLink={setLinkPlace}\r\n        placeMessage={validPlace}\r\n        validationPlace={validationPlace}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nAddPlacePopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onAddPlace: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction DeleteCardPopup({\r\n  isLoadingButton,\r\n  isOpen,\r\n  onClose,\r\n  onDeleteCard,\r\n  isCard,\r\n}) {\r\n  const textButton = isLoadingButton ? 'Удаляем...' : 'Да';\r\n  const deletePopup = {\r\n    id: 4,\r\n    name: 'trash',\r\n    title: 'Вы уверены?',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    onDeleteCard(isCard);\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      key={deletePopup.id}\r\n      name={deletePopup.name}\r\n      title={deletePopup.title}\r\n      buttonTitle={deletePopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n\r\nDeleteCardPopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onDeleteCard: PropTypes.func.isRequired,\r\n  isCard: PropTypes.object,\r\n};\r\n\r\nexport default DeleteCardPopup;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo,\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Что-то пошло не так!</h2>\r\n          <details style={{ whiteSpace: 'pre-wrap' }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditAvatarPopup({ isLoadingButton, isOpen, onClose, onUpdateAvatar }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const avatarPopup = {\r\n    id: 1,\r\n    name: 'avatar',\r\n    title: 'Обновить аватар',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n\r\n  const inputRef = React.useRef();\r\n  const [avatarUser, setAvatar] = React.useState('');\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n  const [validAvatar, setValidAvatar] = React.useState('');\r\n\r\n  function validationAvatar(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidAvatar(evt.target.validationMessage)\r\n      : setValidAvatar('');\r\n  }\r\n\r\n  function setAvatarUser() {\r\n    setAvatar(inputRef.current.value);\r\n    setActiveButton(!inputRef.current.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    setAvatar('');\r\n\r\n    onUpdateAvatar({\r\n      avatar: avatarUser,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      key={avatarPopup.id}\r\n      name={avatarPopup.name}\r\n      title={avatarPopup.title}\r\n      buttonTitle={avatarPopup.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      active={activeButton}>\r\n      <MarkupForPopups.Avatar\r\n        avatarUser={avatarUser}\r\n        inputRef={inputRef}\r\n        editAvatar={setAvatarUser}\r\n        avatarMessage={validAvatar}\r\n        validationAvatar={validationAvatar}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditAvatarPopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateAvatar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm.js';\r\nimport { MarkupForPopups } from './MarkupForPopups.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditProfilePopup({ isLoadingButton, isOpen, onClose, onUpdateUser }) {\r\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\r\n  const profile = {\r\n    id: 2,\r\n    name: 'profile',\r\n    title: 'Редактировать форму',\r\n    buttonTitle: `${textButton}`,\r\n  };\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [nameProfile, setName] = React.useState({ name: '' });\r\n  const [description, setDescription] = React.useState({ about: '' });\r\n  let [activeButton, setActiveButton] = React.useState(true);\r\n  const [validProfile, setValidProfile] = React.useState({\r\n    name: '',\r\n    about: '',\r\n  });\r\n\r\n  function validationProfile(evt) {\r\n    !evt.target.validity.valid\r\n      ? setValidProfile({\r\n          [evt.target.name]: evt.target.validationMessage,\r\n        })\r\n      : setValidProfile({\r\n          [evt.target.name]: '',\r\n        });\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function setNameProfile(evt) {\r\n    setName(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function setDescriptionProfile(evt) {\r\n    setDescription(evt.target.value);\r\n    setActiveButton(!evt.target.value);\r\n  }\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    onUpdateUser({\r\n      name: nameProfile,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      key={profile.id}\r\n      name={profile.name}\r\n      title={profile.title}\r\n      buttonTitle={profile.buttonTitle}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      active={activeButton}>\r\n      <MarkupForPopups.Profile\r\n        editName={setNameProfile}\r\n        editAbout={setDescriptionProfile}\r\n        nameProfile={nameProfile}\r\n        about={description}\r\n        profileMessage={validProfile}\r\n        validationProfile={validationProfile}\r\n      />\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nEditProfilePopup.propTypes = {\r\n  isLoadingButton: PropTypes.bool,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n  onUpdateUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EditProfilePopup;\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nexport function ErrorPage({ error }) {\r\n  const styleErr = {\r\n    'color': '#f00',\r\n    'display': 'flex',\r\n    'flexDirection': 'column',\r\n    'justify-content': 'center',\r\n    'align-items': 'center',\r\n    'minHeight': '60vh',\r\n  };\r\n return (\r\n   <React.Fragment>\r\n     <div style={styleErr}>\r\n       <h1>{error.message}</h1>\r\n       <p style={{ color: '#fff' }}>попробуйте зайти позже</p>\r\n     </div>\r\n   </React.Fragment>\r\n );\r\n}\r\n","/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport api from '../utils/api.js';\r\nimport Main from './Main.js';\r\nimport Header from './Header.js';\r\nimport Footer from './Footer.js';\r\nimport Loader from './Loader/Loader.js';\r\nimport AddPlacePopup from './AddPlacePopup.js';\r\nimport DeleteCardPopup from './DeleteCardPopup.js';\r\nimport ErrorBoundary from './Error/ErrorBoundary.js';\r\nimport EditAvatarPopup from './EditAvatarPopup.js';\r\nimport EditProfilePopup from './EditProfilePopup.js';\r\nimport { CurrentUserContext } from '../context/CurrentUserContext.js';\r\nimport { ErrorPage } from './Error/ErrorPage';\r\n\r\nfunction App() {\r\n  const [isCard, setIsCard] = React.useState({});\r\n  const [isAddPlacePopupOpen, setAddPlacePopup] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopup] = React.useState(false);\r\n  const [isEditProfilePopupOpen, setEditProfilePopup] = React.useState(false);\r\n  const [isConfirmTrashPopupOpen, setConfirmTrashPopup] = React.useState(false);\r\n  const [currentUser, setCurrentUser] = React.useState({\r\n    name: '',\r\n    about: '',\r\n    _id: '',\r\n    avatar: '',\r\n  }); // тут информация обо мне с сервера\r\n  const [cards, setCards] = React.useState([]); // тут информация о карточках\r\n  const [loading, setLoading] = React.useState(true); // лоадер при загрузке страницы\r\n  const [statusOk, setIsOk] = React.useState(true); // флаг для ошибки сервера\r\n  const [statusError, setError] = React.useState({}); // флаг для ошибки сервера\r\n  const [selectedCard, setSelectedCard] = React.useState(); // объект для попапа с картинкой\r\n  const [buttonLoading, setButtonLoading] = React.useState(false); // Лоадер для кнопки сохранить.\r\n\r\n  function closeAllPopups() {\r\n    // закрытие всех попапов\r\n    setEditAvatarPopup(false);\r\n    setEditProfilePopup(false);\r\n    setAddPlacePopup(false);\r\n    setConfirmTrashPopup(false);\r\n    setSelectedCard(undefined);\r\n    setButtonLoading(false);\r\n  }\r\n\r\n  function closeAllPopupsEsc(evt) {\r\n    if (evt.key === 'Escape') {\r\n      closeAllPopups();\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('keydown', closeAllPopupsEsc);\r\n    return () => {\r\n      window.removeEventListener('keydown', closeAllPopupsEsc);\r\n    };\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    // получаем данные с сервера\r\n    Promise.all([api.getInfoForUser(), api.getInfoForCards()])\r\n      .then(([dataUser, dataCards]) => {\r\n        setCurrentUser(dataUser);\r\n        setCards(dataCards);\r\n      })\r\n      .catch((err) => {\r\n        console.error('Информация сервера с ошибкой', err.message);\r\n        setError(err);\r\n        setIsOk(false);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    // получаем новую информацию пользователя  с сервера\r\n    setButtonLoading(true);\r\n\r\n    api\r\n      .updateUserInfo({ name, about })\r\n      .then((infoUser) => {\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          name: infoUser.name,\r\n          about: infoUser.about,\r\n        });\r\n      })\r\n      .catch((err) => console.error('Информация обновления пользователя с ошибкой', err))\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar({avatar}) {\r\n    setButtonLoading(true);\r\n    // получаем обновленный аватар с сервера\r\n    api\r\n      .updateUserAvatar({ avatar })\r\n      .then((infoAvatar) => {\r\n        setCurrentUser({ ...currentUser, avatar: infoAvatar.avatar });\r\n      })\r\n      .catch((err) => console.error('Информация обновления пользователя с ошибкой', err))\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function handleAddPlace({name, link}) {\r\n    setButtonLoading(true);\r\n    // получаем новую карточку с сервера и вставляем в начало\r\n    api\r\n      .addCard({ name, link })\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .catch((err) => console.error('Информация обновления карточки с ошибкой', err))\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopup(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopup(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopup(true);\r\n  }\r\n  function handleConfirmTrashClick(card) {\r\n    setConfirmTrashPopup(true);\r\n    setIsCard(card);\r\n  }\r\n  function handleCardClick({name, link}) {\r\n    // для открытия попапа с картинкой\r\n    setSelectedCard({ link, name });\r\n  }\r\n\r\n  function handleCardLike({ likes, _id }) {\r\n    // получаем лайки с сервера\r\n    const isLiked = likes.some((i) => i._id === currentUser._id);\r\n\r\n    api\r\n      .changeLikeCardStatus(_id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => (c._id === _id ? newCard : c));\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => console.error('Информация по карточкам с ошибкой', err.message));\r\n  }\r\n\r\n  function handleCardDelete({ _id }) {\r\n    // удаляем карточку\r\n    const idCard = _id;\r\n\r\n    setButtonLoading(true);\r\n\r\n    api\r\n      .deleteCard(_id)\r\n      .then(() => {\r\n        setCards(cards.filter((card) => card._id !== idCard));\r\n      })\r\n      .catch((err) => console.error('Информация по карточкам с ошибкой', err.message))\r\n      .finally(() => {\r\n        closeAllPopups();\r\n      });\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='page'>\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n          <ErrorBoundary>\r\n            <Header />\r\n            {loading && <Loader />}\r\n            {statusOk ? (\r\n              <React.Fragment>\r\n                <Main\r\n                  onEditProfile={handleEditProfileClick}\r\n                  onEditAvatar={handleEditAvatarClick}\r\n                  onAddPlace={handleAddPlaceClick}\r\n                  handleCardDelete={handleConfirmTrashClick}\r\n                  closeAllPopups={closeAllPopups}\r\n                  handleCardClick={handleCardClick}\r\n                  selectedCard={selectedCard}\r\n                  handleCardLike={handleCardLike}\r\n                  cards={cards}\r\n                  statusOk={statusOk}\r\n                />\r\n\r\n                <AddPlacePopup\r\n                  isOpen={isAddPlacePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onAddPlace={handleAddPlace}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <EditAvatarPopup\r\n                  isOpen={isEditAvatarPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onUpdateAvatar={handleUpdateAvatar}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <EditProfilePopup\r\n                  isOpen={isEditProfilePopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onUpdateUser={handleUpdateUser}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n                <DeleteCardPopup\r\n                  isOpen={isConfirmTrashPopupOpen}\r\n                  onClose={closeAllPopups}\r\n                  onDeleteCard={handleCardDelete}\r\n                  isCard={isCard}\r\n                  isLoadingButton={buttonLoading}\r\n                />\r\n              </React.Fragment>\r\n            ) : (\r\n              <ErrorPage error={statusError} />\r\n            )}\r\n            <Footer />\r\n          </ErrorBoundary>\r\n        </CurrentUserContext.Provider>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App.js';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}